
CREATE TABLE MESSAGE (

	id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
    message VARCHAR(50),
    PRIMARY KEY (id)

);

How to do reverse engineering in Eclipse using Hibernate Tools:
https://www.javacodegeeks.com/2013/10/step-by-step-auto-code-generation-for-pojo-domain-java-classes-and-hbm-using-eclipse-hibernate-plugin.html

============================================================================================================
Error: This happened upon running the App.java with the main method as a Java application.
Exception in thread "main" java.lang.UnsupportedClassVersionError: org/hibernate/HibernateException : Unsupported major.minor version 52.0
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:791)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)

Root Cause: http://stackoverflow.com/questions/22489398/unsupported-major-minor-version-52-0
During compile time you are using a higher JDK and a lower JDK during runtime.
The issue is because of Java version mismatch. Referring to the Wikipedia Java Class Reference :

J2SE 8 = 52
J2SE 7 = 51
J2SE 6.0 = 50
J2SE 5.0 = 49
JDK 1.4 = 48
JDK 1.3 = 47
JDK 1.2 = 46
JDK 1.1 = 45
These are the assigned major numbers. The error regarding the unsupported major.minor version is 
"because during compile time you are using a higher JDK and a lower JDK during runtime".

Solution:
You must run and compile your application with the same version of Java.

If you're using Eclipse you should do 2 things:

1. In Eclipse, click on "Window > Preferences", and in the window that appears, on the left side, under "Java", 
click on "Installed JREs", click on "Add..." and navigate to the folder that contains the JDK.

2. Right-click on your project and click on "Properties", in the window that appears, on the left side, 
click on "Java Compiler" and uncheck "Use compliance from execution environment on the Java Build Path", 
this allows you to choose in the the list "Compiler compilance level" the same version that you set in the previous step.

Actual Solution:
I had to change the version of hibernate-core library which contains the HibernateException.class causing the problem. It seems this class was compiled
using Java 8 while we are using Java 7 during runtime, thus causing the error message: org/hibernate/HibernateException : Unsupported major.minor version 52.0

		<!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>4.3.1.Final</version>
			<!-- version>5.2.9.Final</version-->
		</dependency>

============================================================================================================

Error:
INFO: HHH000040: Configuration resource: /hibernate.cfg.xml
Failed to create session factory object org.hibernate.HibernateException: /hibernate.cfg.xml not found
Exception in thread "main" java.lang.ExceptionInInitializerError
	at com.App.main(App.java:41)
Caused by: org.hibernate.HibernateException: /hibernate.cfg.xml not found
	at org.hibernate.internal.util.ConfigHelper.getResourceAsStream(ConfigHelper.java:173)
	at org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2093)
	at org.hibernate.cfg.Configuration.configure(Configuration.java:2074)
	at org.hibernate.cfg.Configuration.configure(Configuration.java:2054)
	at com.App.main(App.java:34)

Root cause: hibernate.cfg.xml cannot be found by the app on the classpath.
Solution: 
Change the following code:
Configuration conf = new Configuration().configure();
to 
Configuration conf = new Configuration().configure("/hibernate/hibernate.cfg.xml");
where: hibernate.cfg.xml is located under src/main/resources/hibernate/hibernate.cfg.xml


============================================================================================================

Error:

org.hibernate.MappingException: Unknown entity: com.domain.hibernate.Employee
	at org.hibernate.internal.SessionFactoryImpl.getEntityPersister(SessionFactoryImpl.java:1095)
	at org.hibernate.internal.SessionImpl.getEntityPersister(SessionImpl.java:1439)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:116)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:209)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:55)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:194)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:49)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:90)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:711)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:703)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:698)
	at com.HibernateExampleApp.addEmployee(HibernateExampleApp.java:79)
	at com.HibernateExampleApp.main(HibernateExampleApp.java:41)
	
	
============================================================================================================